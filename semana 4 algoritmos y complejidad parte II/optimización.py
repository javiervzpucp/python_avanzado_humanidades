# -*- coding: utf-8 -*-
"""
Created on Sun Feb 16 22:28:32 2025

@author: jveraz
"""

##############################
# Optimizaci√≥n de Algoritmos #
##############################

# üîπ ¬øQu√© significa optimizar un algoritmo?
# Optimizar un algoritmo implica mejorar su rendimiento reduciendo la cantidad de operaciones 
# necesarias para resolver un problema.

# üîπ Estrategias de optimizaci√≥n:
# 1Ô∏è‚É£ **Evitar c√°lculos repetitivos** ‚Üí Guardar valores intermedios en variables o estructuras de datos.
# 2Ô∏è‚É£ **Usar estructuras eficientes** ‚Üí Diccionarios en vez de listas para b√∫squedas r√°pidas.
# 3Ô∏è‚É£ **Reducir operaciones innecesarias dentro de bucles** ‚Üí Usar funciones matem√°ticas en lugar de iteraciones.

# üîπ Ejemplo 1: Uso de una f√≥rmula en lugar de un bucle (mejora de O(n) a O(1))

def suma_bucle(n):
    """
    Calcula la suma de los primeros n n√∫meros usando un bucle.
    Complejidad O(n) porque hay n iteraciones.
    """
    suma = 0
    for i in range(1, n+1):
        suma += i
    return suma

def suma_formula(n):
    """
    Calcula la suma de los primeros n n√∫meros usando la f√≥rmula matem√°tica.
    Complejidad O(1) porque la f√≥rmula se ejecuta en tiempo constante.
    """
    return n * (n + 1) // 2

print("Suma con bucle:", suma_bucle(1000))
print("Suma con f√≥rmula:", suma_formula(1000))  # Mucho m√°s eficiente


